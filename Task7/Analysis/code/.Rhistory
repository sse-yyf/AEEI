senators_td2 <- read.csv("../input/senators_td2.csv", stringsAsFactors = FALSE)
senators_bigram <- read.csv("../input/senators_bigram.csv", stringsAsFactors = FALSE)
senators_trigram <- read.csv("../input/senators_trigram.csv", stringsAsFactors = FALSE)
wordlist <- senators_td2 %>%
count(word, sort = TRUE)
library(dplyr)
wordlist <- senators_td2 %>%
count(word, sort = TRUE)
bigramlist <- senators_bigram %>%
count(word, sort = TRUE)
View(senators_td2)
wordlist <- senators_td2 %>%
count(word, sort = TRUE)
View(senators_trigram)
View(senators_bigram)
View(wordlist)
View(senators_trigram)
bigramlist <- senators_bigram %>%
count(bigram, sort = TRUE)
trigramlist <- senators_trigram %>%
count(trigram, sort = TRUE)
wordlist %>%
filter(row_number() < 50) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word,n)) %>%
geom_bar(stat = "identity") +
xlab(NULL) +
coord_flip()
library(ggplot2)
wordlist %>%
filter(row_number() < 50) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word,n)) %>%
geom_bar(stat = "identity") +
xlab(NULL) +
coord_flip()
wordlist %>%
filter(row_number() < 50) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word,n)) +
geom_bar(stat = "identity") +
xlab(NULL) +
coord_flip()
wordtop50 <- wordlist %>%
filter(row_number() < 50) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word,n)) +
geom_bar(stat = "identity") +
xlab(NULL) +
coord_flip()
ggsave("../outcome/wordtop50.png", plot = wordtop50)
sen105_party <- read.csv("../../raw/sen105_party.csv", stringsAsFactors = FALSE)
wordlist_senator <- senators_td2 %>%
inner_join(sen105_party) %>%
count(id,party,word, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(word,id,n)
library(tm)
wordlist_senator <- senators_td2 %>%
inner_join(sen105_party) %>%
count(id,party,word, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(word,id,n)
detach("package:tm", unload = TRUE)
library(tidytext)
# compute word frequency by senator
wordlist_senator <- senators_td2 %>%
inner_join(sen105_party) %>%
count(id,party,word, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(word,id,n)
View(sen105_party)
library(dplyr)
library(ggplot2)
library(tidytext)
senators_td2 <- read.csv("../input/senators_td2.csv", stringsAsFactors = FALSE)
senators_bigram <- read.csv("../input/senators_bigram.csv", stringsAsFactors = FALSE)
senators_trigram <- read.csv("../input/senators_trigram.csv", stringsAsFactors = FALSE)
sen105_party <- read.csv("../../raw/sen105_party.csv", stringsAsFactors = FALSE)
View(sen105_party)
View(senators_td2)
bigramtop50 <- bigramlist %>%
filter(row_number() < 50) %>%
mutate(bigram = reorder(bigram,n)) %>%
ggplot(aes(bigram,n)) +
geom_bar(stat = "identity") +
xlab(NULL) +
coord_flip()
wordlist <- senators_td2 %>%
count(word, sort = TRUE)
bigramlist <- senators_bigram %>%
count(bigram, sort = TRUE)
trigramlist <- senators_trigram %>%
count(trigram, sort = TRUE)
# distribution of the top 50 words
bigramtop50 <- bigramlist %>%
filter(row_number() < 50) %>%
mutate(bigram = reorder(bigram,n)) %>%
ggplot(aes(bigram,n)) +
geom_bar(stat = "identity") +
xlab(NULL) +
coord_flip()
ggsave("../outcome/bigramtop50.png", plot = bigramtop50) # save figure
trigramtop50 <- trigramlist %>%
filter(row_number() < 50) %>%
mutate(trigram = reorder(trigram,n)) %>%
ggplot(aes(trigram,n)) +
geom_bar(stat = "identity") +
xlab(NULL) +
coord_flip()
ggsave("../outcome/trigramtop50.png", plot = trigramtop50) # save figure
View(sen105_party)
library(dplyr)
library(ggplot2)
library(tidytext)
senators_td2 <- read.csv("../input/senators_td2.csv", stringsAsFactors = FALSE)
senators_bigram <- read.csv("../input/senators_bigram.csv", stringsAsFactors = FALSE)
senators_trigram <- read.csv("../input/senators_trigram.csv", stringsAsFactors = FALSE)
sen105_party <- read.csv("../input/sen105_party.csv", stringsAsFactors = FALSE)
View(sen105_party)
View(senators_td2)
wordlist_senator <- senators_td2 %>%
inner_join(sen105_party) %>%
count(id,party,word, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(word,id,n)
View(wordlist_senator)
library(dplyr)
library(ggplot2)
library(tidytext)
senators_td2 <- read.csv("../input/senators_td2.csv", stringsAsFactors = FALSE)
senators_bigram <- read.csv("../input/senators_bigram.csv", stringsAsFactors = FALSE)
senators_trigram <- read.csv("../input/senators_trigram.csv", stringsAsFactors = FALSE)
sen105_party <- read.csv("../input/sen105_party.csv", stringsAsFactors = FALSE)
# word count
wordlist <- senators_td2 %>%
count(word, sort = TRUE)
bigramlist <- senators_bigram %>%
count(bigram, sort = TRUE)
trigramlist <- senators_trigram %>%
count(trigram, sort = TRUE)
# distribution of the top 50 bigrams and 50 trigrams
bigramtop50 <- bigramlist %>%
filter(row_number() < 50) %>%
mutate(bigram = reorder(bigram,n)) %>%
ggplot(aes(bigram,n)) +
geom_bar(stat = "identity") +
xlab(NULL) +
coord_flip()
ggsave("../outcome/bigramtop50.png", plot = bigramtop50) # save figure
trigramtop50 <- trigramlist %>%
filter(row_number() < 50) %>%
mutate(trigram = reorder(trigram,n)) %>%
ggplot(aes(trigram,n)) +
geom_bar(stat = "identity") +
xlab(NULL) +
coord_flip()
ggsave("../outcome/trigramtop50.png", plot = trigramtop50) # save figure
# compute word frequency by senator
wordlist_senator <- senators_td2 %>%
inner_join(sen105_party) %>%
count(id,party,word, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(word,id,n)
View(wordlist_senator)
bigramlist_senator <- senators_bigram %>%
inner_join(sen105_party) %>%
count(id,party,bigram, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(word,id,n)
View(sen105_party)
View(senators_bigram)
View(senators_trigram)
library(dplyr)
library(ggplot2)
library(tidytext)
senators_td2 <- read.csv("../input/senators_td2.csv", stringsAsFactors = FALSE)
senators_bigram <- read.csv("../input/senators_bigram.csv", stringsAsFactors = FALSE)
senators_trigram <- read.csv("../input/senators_trigram.csv", stringsAsFactors = FALSE)
sen105_party <- read.csv("../input/sen105_party.csv", stringsAsFactors = FALSE)
# word count
wordlist <- senators_td2 %>%
count(word, sort = TRUE)
bigramlist <- senators_bigram %>%
count(bigram, sort = TRUE)
trigramlist <- senators_trigram %>%
count(trigram, sort = TRUE)
# distribution of the top 50 bigrams and 50 trigrams
bigramtop50 <- bigramlist %>%
filter(row_number() < 50) %>%
mutate(bigram = reorder(bigram,n)) %>%
ggplot(aes(bigram,n)) +
geom_bar(stat = "identity") +
xlab(NULL) +
coord_flip()
ggsave("../outcome/bigramtop50.png", plot = bigramtop50) # save figure
trigramtop50 <- trigramlist %>%
filter(row_number() < 50) %>%
mutate(trigram = reorder(trigram,n)) %>%
ggplot(aes(trigram,n)) +
geom_bar(stat = "identity") +
xlab(NULL) +
coord_flip()
ggsave("../outcome/trigramtop50.png", plot = trigramtop50) # save figure
# compute word frequency by senator
wordlist_senator <- senators_td2 %>%
inner_join(sen105_party) %>%
count(id,party,word, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(word,id,n)
bigramlist_senator <- senators_bigram %>%
inner_join(sen105_party) %>%
count(id,party,bigram, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(word,id,n)
bigramlist_senator <- senators_bigram %>%
inner_join(sen105_party) %>%
count(id,party,bigram, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(bigram,id,n)
trigramlist_senator <- senators_trigram %>%
inner_join(sen105_party) %>%
count(id,party,trigram, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(trigram,id,n)
View(bigramlist_senator)
View(trigramlist_senator)
# Frequencies by party
bigramlist_party <- senators_bigram %>%
inner_join(sen105_party) %>%
count(party,bigram, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(bigram,party,n)
trigramlist_party <- senators_trigram %>%
inner_join(sen105_party) %>%
count(party,trigram, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(trigram,party,n)
View(bigramlist_party)
library(reshape2)
bigramlist_party %>%
select(bigram,party,n) %>%
acast(bigram ~ party, value.var = "n", fill = 0) %>%
comparison.cloud(max.word = "50")
install.packages("wordcloud")
library(wordcloud)
bigramlist_party %>%
select(bigram,party,n) %>%
acast(bigram ~ party, value.var = "n", fill = 0) %>%
comparison.cloud(max.word = "50")
bigramlist_party %>%
select(bigram,party,n) %>%
acast(bigram ~ party, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("#66CCFF", "#EE0000"), max.word = "50")
png("../outcome/wordcloud.png")
bigramlist_party %>%
select(bigram,party,n) %>%
acast(bigram ~ party, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("#66CCFF", "#EE0000"), max.word = "50")
library(dplyr)
library(ggplot2)
library(tidytext)
library(reshape2)
library(wordcloud)
library(e1071)
senators_td2 <- read.csv("../input/senators_td2.csv", stringsAsFactors = FALSE)
senators_bigram <- read.csv("../input/senators_bigram.csv", stringsAsFactors = FALSE)
senators_trigram <- read.csv("../input/senators_trigram.csv", stringsAsFactors = FALSE)
sen105_party <- read.csv("../input/sen105_party.csv", stringsAsFactors = FALSE)
# word count
wordlist <- senators_td2 %>%
count(word, sort = TRUE)
bigramlist <- senators_bigram %>%
count(bigram, sort = TRUE)
bigramlist_party <- senators_bigram %>%
inner_join(sen105_party) %>%
count(party,bigram, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(bigram,party,n)
bigramlist <- senators_bigram %>%
count(bigram, sort = TRUE)
trigramlist <- senators_trigram %>%
count(trigram, sort = TRUE)
# distribution of the top 50 bigrams and 50 trigrams
bigramtop50 <- bigramlist %>%
filter(row_number() < 50) %>%
mutate(bigram = reorder(bigram,n)) %>%
ggplot(aes(bigram,n)) +
geom_bar(stat = "identity") +
xlab(NULL) +
coord_flip()
ggsave("../outcome/bigramtop50.png", plot = bigramtop50) # save figure
trigramtop50 <- trigramlist %>%
filter(row_number() < 50) %>%
mutate(trigram = reorder(trigram,n)) %>%
ggplot(aes(trigram,n)) +
geom_bar(stat = "identity") +
xlab(NULL) +
coord_flip()
ggsave("../outcome/trigramtop50.png", plot = trigramtop50) # save figure
# Frequencies by party
bigramlist_party <- senators_bigram %>%
inner_join(sen105_party) %>%
count(party,bigram, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(bigram,party,n)
trigramlist_party <- senators_trigram %>%
inner_join(sen105_party) %>%
count(party,trigram, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(trigram,party,n)
# wordcloud
png("../outcome/wordcloud.png")
bigramlist_party %>%
select(bigram,party,n) %>%
acast(bigram ~ party, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("#66CCFF", "#EE0000"), max.word = 50)
dev.off()
# Bigram frequency by senator
bigramlist_senator <- senators_bigram %>%
inner_join(sen105_party) %>%
count(id, party,bigram, sort = TRUE) %>%
ungroup()
# Cast text into a Matrix Object
s <- bigramlist_senator %>%
cast_sparse(id, bigram, n)
class(s)
s = s[order(rownames(s)),] # order rows by name to match ordering in y
# generate y
y = sen105_party[order(sen105_party$id),]
View(sen105_party)
View(sen105_party)
View(s)
View(sen105_party)
View(bigramlist_senator)
y = bigramlist_senator[order(bigramlist_senator$id),]
y <- as.matrix(y$party)
y <- as.factor(y)
svmfit = svm(s,y, kernel = "linear", cost = .1)
s[0]
s
s_df <- as.data.frame(s)
library(dplyr)
library(ggplot2)
library(tidytext)
library(reshape2)
library(wordcloud)
library(e1071)
senators_td2 <- read.csv("../input/senators_td2.csv", stringsAsFactors = FALSE)
senators_bigram <- read.csv("../input/senators_bigram.csv", stringsAsFactors = FALSE)
senators_trigram <- read.csv("../input/senators_trigram.csv", stringsAsFactors = FALSE)
sen105_party <- read.csv("../input/sen105_party.csv", stringsAsFactors = FALSE)
wordlist <- senators_td2 %>%
count(word, sort = TRUE)
bigramlist <- senators_bigram %>%
count(bigram, sort = TRUE)
trigramlist <- senators_trigram %>%
count(trigram, sort = TRUE)
# Frequencies by party
bigramlist_party <- senators_bigram %>%
inner_join(sen105_party) %>%
count(party,bigram, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(bigram,party,n)
# Bigram frequency by senator
bigramlist_senator <- senators_bigram %>%
inner_join(sen105_party) %>%
count(id, party,bigram, sort = TRUE) %>%
ungroup()
# Cast text into a Matrix Object
s <- bigramlist_senator %>%
cast_sparse(id, bigram, n)
s = s[order(rownames(s)),] # order rows by name to match ordering in y
# generate y
y = sen105_party[order(sen105_party$id),]
y <- as.matrix(y$party)
y <- as.factor(y)
# fit svm
svmfit = svm(s,y, kernel = "linear", cost = .1)
summary(svmfit)
beta <- drop(t(bestmod$coefs)%*%as.matrix(s)[bestmod$index,]) %>%
as.data.frame()
set.seed(123456)
beta <- drop(t(sumfit$coefs)%*%as.matrix(s)[sumfit$index,]) %>%
as.data.frame()
beta <- drop(t(svmfit$coefs)%*%as.matrix(s)[svmfit$index,]) %>%
as.data.frame()
View(beta)
write.csv(beta, "../outcome/wordideology.csv", row.names = FALSE)
